diff -Naur chromium-54.0.2840.100.orig/base/trace_event/malloc_dump_provider.cc chromium-54.0.2840.100/base/trace_event/malloc_dump_provider.cc
--- chromium-54.0.2840.100.orig/base/trace_event/malloc_dump_provider.cc	2016-11-30 13:21:42.571603403 -0800
+++ chromium-54.0.2840.100/base/trace_event/malloc_dump_provider.cc	2016-11-30 13:27:18.160822662 -0800
@@ -224,7 +224,7 @@
   resident_size = all_heap_info.committed_size;
   allocated_objects_size = all_heap_info.allocated_size;
   allocated_objects_count = all_heap_info.block_count;
-#else
+#elif defined(OS_LINUX) && defined(__GLIBC__)
   struct mallinfo info = mallinfo();
   DCHECK_GE(info.arena + info.hblkhd, info.uordblks);
 
@@ -238,6 +238,7 @@
   allocated_objects_size = info.uordblks;
 #endif
 
+#if defined(USE_TCMALLOC) || defined(OS_MACOSX) || defined(OS_IOS) || (defined(OS_LINUX) && defined(__GLIBC__))
   MemoryAllocatorDump* outer_dump = pmd->CreateAllocatorDump("malloc");
   outer_dump->AddScalar("virtual_size", MemoryAllocatorDump::kUnitsBytes,
                         total_virtual_size);
@@ -264,6 +265,7 @@
                           MemoryAllocatorDump::kUnitsBytes,
                           resident_size - allocated_objects_size);
   }
+#endif
 
   // Heap profiler dumps.
   if (!heap_profiler_enabled_)
diff -Naur chromium-54.0.2840.100.orig/content/child/content_child_helpers.cc chromium-54.0.2840.100/content/child/content_child_helpers.cc
--- chromium-54.0.2840.100.orig/content/child/content_child_helpers.cc	2016-11-30 13:21:44.171618482 -0800
+++ chromium-54.0.2840.100/content/child/content_child_helpers.cc	2016-11-30 13:28:03.140251933 -0800
@@ -13,7 +13,7 @@
 #include "build/build_config.h"
 #include "v8/include/v8.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) && defined(__GLIBC__)
 #include <malloc.h>
 #endif
 
@@ -25,7 +25,7 @@
 // though, this provides only a partial and misleading value.
 // Unfortunately some telemetry benchmark rely on it and these need to
 // be refactored before getting rid of this. See crbug.com/581365 .
-#if defined(OS_LINUX) || defined(OS_ANDROID)
+#if (defined(OS_LINUX) && defined(__GLIBC__)) || defined(OS_ANDROID)
 size_t GetMemoryUsageKB() {
   struct mallinfo minfo = mallinfo();
   uint64_t mem_usage =
