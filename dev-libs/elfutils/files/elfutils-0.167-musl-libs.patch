diff -Naur elfutils-0.167.orig/lib/error.h elfutils-0.167/lib/error.h
--- elfutils-0.167.orig/lib/error.h	1969-12-31 16:00:00.000000000 -0800
+++ elfutils-0.167/lib/error.h	2016-11-15 11:49:10.788340567 -0800
@@ -0,0 +1,27 @@
+#ifndef _ERROR_H_
+#define _ERROR_H_
+
+#include <stdarg.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+#include <errno.h>
+
+static unsigned int error_message_count = 0;
+
+static inline void error(int status, int errnum, const char* format, ...)
+{
+	va_list ap;
+	fprintf(stderr, "%s: ", program_invocation_name);
+	va_start(ap, format);
+	vfprintf(stderr, format, ap);
+	va_end(ap);
+	if (errnum)
+		fprintf(stderr, ": %s", strerror(errnum));
+	fprintf(stderr, "\n");
+	error_message_count++;
+	if (status)
+		exit(status);
+}
+
+#endif	/* _ERROR_H_ */
diff -Naur elfutils-0.167.orig/lib/fixedsizehash.h elfutils-0.167/lib/fixedsizehash.h
--- elfutils-0.167.orig/lib/fixedsizehash.h	2015-08-21 05:22:37.000000000 -0700
+++ elfutils-0.167/lib/fixedsizehash.h	2016-11-15 11:50:20.857983670 -0800
@@ -30,12 +30,12 @@
 #include <errno.h>
 #include <stdlib.h>
 #include <string.h>
-#include <sys/cdefs.h>
 #include <sys/param.h>
 
 #include <system.h>
 
-#define CONCAT(t1,t2) __CONCAT (t1,t2)
+#define CONCAT1(x,y) x##y
+#define CONCAT(x,y) CONCAT1(x,y)
 
 /* Before including this file the following macros must be defined:
 
diff -Naur elfutils-0.167.orig/lib/system.h elfutils-0.167/lib/system.h
--- elfutils-0.167.orig/lib/system.h	2015-08-21 05:22:37.000000000 -0700
+++ elfutils-0.167/lib/system.h	2016-11-15 11:51:11.262446284 -0800
@@ -35,6 +35,7 @@
 #include <endian.h>
 #include <byteswap.h>
 #include <unistd.h>
+#include <fcntl.h>
 
 #if __BYTE_ORDER == __LITTLE_ENDIAN
 # define LE32(n)	(n)
@@ -50,6 +51,20 @@
 # error "Unknown byte order"
 #endif
 
+#if !defined(__GLIBC__)
+
+/* Evaluate EXPRESSION, and repeat as long as it returns -1 with `errno'
+   set to EINTR.  */
+
+# define TEMP_FAILURE_RETRY(expression) \
+  (__extension__                                                              \
+    ({ long int __result;                                                     \
+       do __result = (long int) (expression);                                 \
+       while (__result == -1L && errno == EINTR);                             \
+       __result; }))
+
+#endif
+
 extern void *xmalloc (size_t) __attribute__ ((__malloc__));
 extern void *xcalloc (size_t, size_t) __attribute__ ((__malloc__));
 extern void *xrealloc (void *, size_t) __attribute__ ((__malloc__));
diff -Naur elfutils-0.167.orig/libcpu/i386_disasm.c elfutils-0.167/libcpu/i386_disasm.c
--- elfutils-0.167.orig/libcpu/i386_disasm.c	2016-08-03 08:23:55.000000000 -0700
+++ elfutils-0.167/libcpu/i386_disasm.c	2016-11-15 11:51:36.047673764 -0800
@@ -711,6 +711,7 @@
 
 		case 'm':
 		  /* Mnemonic.  */
+		  str = mnebuf;
 
 		  if (unlikely (instrtab[cnt].mnemonic == MNE_INVALID))
 		    {
diff -Naur elfutils-0.167.orig/libdw/libdw.h elfutils-0.167/libdw/libdw.h
--- elfutils-0.167.orig/libdw/libdw.h	2015-11-27 05:36:29.000000000 -0800
+++ elfutils-0.167/libdw/libdw.h	2016-11-15 11:52:30.103169888 -0800
@@ -33,7 +33,27 @@
 #include <stdbool.h>
 #include <stddef.h>
 #include <stdint.h>
+#include <unistd.h>
+#include <alloca.h>
+#include <string.h>
 
+#ifndef TEMP_FAILURE_RETRY
+#define TEMP_FAILURE_RETRY(expression) \
+  (__extension__                                                              \
+    ({ long int __result;                                                     \
+       do __result = (long int) (expression);                                 \
+       while (__result == -1L && errno == EINTR);                             \
+       __result; }))
+#endif
+
+#ifndef strndupa
+#define strndupa(s, n) \
+       (__extension__ ({const char *__in = (s); \
+                        size_t __len = strnlen (__in, (n)) + 1; \
+                        char *__out = (char *) alloca (__len); \
+                        __out[__len-1] = '\0'; \
+                        (char *) memcpy (__out, __in, __len-1);}))
+#endif
 
 #if __GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 3)
 # define __nonnull_attribute__(...) __attribute__ ((__nonnull__ (__VA_ARGS__)))
diff -Naur elfutils-0.167.orig/libdwfl/dwfl_build_id_find_elf.c elfutils-0.167/libdwfl/dwfl_build_id_find_elf.c
--- elfutils-0.167.orig/libdwfl/dwfl_build_id_find_elf.c	2016-03-31 13:05:37.000000000 -0700
+++ elfutils-0.167/libdwfl/dwfl_build_id_find_elf.c	2016-11-15 11:53:07.437512545 -0800
@@ -94,7 +94,7 @@
 	{
 	  if (*file_name != NULL)
 	    free (*file_name);
-	  *file_name = canonicalize_file_name (name);
+	  *file_name = realpath (name, NULL);
 	  if (*file_name == NULL)
 	    {
 	      *file_name = name;
diff -Naur elfutils-0.167.orig/libdwfl/dwfl_error.c elfutils-0.167/libdwfl/dwfl_error.c
--- elfutils-0.167.orig/libdwfl/dwfl_error.c	2016-03-31 13:05:37.000000000 -0700
+++ elfutils-0.167/libdwfl/dwfl_error.c	2016-11-15 11:53:34.672762512 -0800
@@ -154,7 +154,16 @@
   switch (error &~ 0xffff)
     {
     case OTHER_ERROR (ERRNO):
+#if defined(__GLIBC__)
       return strerror_r (error & 0xffff, "bad", 0);
+#else
+      {
+        static __thread char buf[128] = "";
+        if (0 == strerror_r(error & 0xffff, buf, sizeof(buf)))
+          return buf;
+      }
+      return "strerror_r() failed";
+#endif
     case OTHER_ERROR (LIBELF):
       return elf_errmsg (error & 0xffff);
     case OTHER_ERROR (LIBDW):
diff -Naur elfutils-0.167.orig/libdwfl/find-debuginfo.c elfutils-0.167/libdwfl/find-debuginfo.c
--- elfutils-0.167.orig/libdwfl/find-debuginfo.c	2016-03-31 13:06:07.000000000 -0700
+++ elfutils-0.167/libdwfl/find-debuginfo.c	2016-11-15 11:54:00.478999362 -0800
@@ -385,7 +385,7 @@
       /* If FILE_NAME is a symlink, the debug file might be associated
 	 with the symlink target name instead.  */
 
-      char *canon = canonicalize_file_name (file_name);
+      char *canon = realpath (file_name, NULL);
       if (canon != NULL && strcmp (file_name, canon))
 	fd = find_debuginfo_in_path (mod, canon,
 				     debuglink_file, debuglink_crc,
diff -Naur elfutils-0.167.orig/libelf/elf.h elfutils-0.167/libelf/elf.h
--- elfutils-0.167.orig/libelf/elf.h	2016-08-03 08:23:55.000000000 -0700
+++ elfutils-0.167/libelf/elf.h	2016-11-15 11:56:09.008179010 -0800
@@ -21,7 +21,9 @@
 
 #include <features.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif
 
 /* Standard ELF types.  */
 
@@ -3682,6 +3684,8 @@
 #define R_BPF_NONE		0	/* No reloc */
 #define R_BPF_MAP_FD		1	/* Map fd to pointer */
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif
 
 #endif	/* elf.h */
diff -Naur elfutils-0.167.orig/libelf/elf_getarsym.c elfutils-0.167/libelf/elf_getarsym.c
--- elfutils-0.167.orig/libelf/elf_getarsym.c	2016-03-31 13:05:37.000000000 -0700
+++ elfutils-0.167/libelf/elf_getarsym.c	2016-11-15 11:56:36.653432739 -0800
@@ -297,7 +297,7 @@
 		arsym[cnt].as_off = (*u32)[cnt];
 
 	      arsym[cnt].as_hash = _dl_elf_hash (str_data);
-	      str_data = rawmemchr (str_data, '\0') + 1;
+	      str_data = memchr (str_data, '\0', SIZE_MAX) + 1;
 	    }
 
 	  /* At the end a special entry.  */
